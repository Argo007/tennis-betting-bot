name: Tennis Engine LIVE (Cron + Manual)

on:
  workflow_dispatch:
    inputs:
      min_edge:
        description: "Edge threshold (e.g. 0.05)"
        required: false
        default: "0.05"
      kelly_scale:
        description: "Kelly scale (e.g. 0.5)"
        required: false
        default: "0.5"
      max_frac:
        description: "Max % bankroll per bet (e.g. 0.05)"
        required: false
        default: "0.05"
      abs_cap:
        description: "Absolute â‚¬ stake cap"
        required: false
        default: "200"
      assume_random_if_missing:
        description: "Assume random result if settle inputs missing (true/false)"
        required: false
        default: "false"
  schedule:
    - cron: "*/30 * * * *"

jobs:
  engine:
    runs-on: ubuntu-latest
    env:
      STATE_DIR: state
      LIVE_OUTDIR: live_results
      MIN_EDGE: ${{ inputs.min_edge || '0.05' }}
      KELLY_SCALE: ${{ inputs.kelly_scale || '0.5' }}
      MAX_FRAC: ${{ inputs.max_frac || '0.05' }}
      ABS_CAP: ${{ inputs.abs_cap || '200' }}
      ASSUME_RANDOM: ${{ inputs.assume_random_if_missing || 'false' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas requests
          fi

      - name: Prepare folders
        shell: bash
        run: |
          mkdir -p "${STATE_DIR}" "${LIVE_OUTDIR}" results docs

      # ================= LIVE FETCH =================
      - name: Fetch live odds
        shell: bash
        run: |
          python scripts/fetch_live_matches.py --out "${LIVE_OUTDIR}/live_matches.csv"
          python scripts/fetch_live_odds.py --matches "${LIVE_OUTDIR}/live_matches.csv" --out "${LIVE_OUTDIR}/live_odds.csv"

      - name: Generate live value picks
        shell: bash
        run: |
          python scripts/tennis_value_picks_live.py \
            --odds "${LIVE_OUTDIR}/live_odds.csv" \
            --outdir "${LIVE_OUTDIR}" \
            --min-edge "${MIN_EDGE}"

      # ================= MAX STAKE (no inline python) =================
      - name: Compute MAX_STAKE_EUR
        id: maxstake
        shell: bash
        run: |
          val=$(python scripts/compute_max_stake.py \
                  --state-dir "${STATE_DIR}" \
                  --max-frac "${MAX_FRAC}")
          echo "MAX_STAKE_EUR=${val}"
          echo "max_stake_eur=${val}" >> "$GITHUB_OUTPUT"

      - name: Log live picks (append to state/trade_log.csv)
        shell: bash
        run: |
          if [ -f "${LIVE_OUTDIR}/picks_live.csv" ]; then
            python scripts/log_live_picks.py \
              --picks "${LIVE_OUTDIR}/picks_live.csv" \
              --state-dir "${STATE_DIR}" \
              --kelly "${KELLY_SCALE}" \
              --stake-cap "${ABS_CAP}" \
              --max-stake-eur "${{ steps.maxstake.outputs.max_stake_eur }}" \
              --assume-random-if-missing "${ASSUME_RANDOM}"
          else
            echo "No live picks generated."
          fi

      - name: Snapshot close odds (for CLV)
        shell: bash
        run: |
          if [ -f "${LIVE_OUTDIR}/live_odds.csv" ]; then
            python scripts/fetch_close_odds.py \
              --odds "${LIVE_OUTDIR}/live_odds.csv" \
              --out "${LIVE_OUTDIR}/close_odds.csv" \
              --max-drift 0.08
          else
            echo "No live_odds.csv present; skipping close odds snapshot."
          fi

      - name: Settle trades (PnL + CLV; update bankroll)
        shell: bash
        run: |
          if [ -f "${STATE_DIR}/trade_log.csv" ]; then
            FLAG=""
            if [ "${ASSUME_RANDOM}" = "true" ]; then
              FLAG="--assume-random-if-missing"
            fi
            python scripts/settle_trades.py \
              --log "${STATE_DIR}/trade_log.csv" \
              --close-odds "${LIVE_OUTDIR}/close_odds.csv" \
              --state-dir "${STATE_DIR}" \
              ${FLAG}
          else
            echo "No ${STATE_DIR}/trade_log.csv; nothing to settle."
          fi

      - name: Build dashboard
        shell: bash
        run: |
          python scripts/make_dashboard.py \
            --state-dir "${STATE_DIR}" \
            --results "results" \
            --live "${LIVE_OUTDIR}" \
            --out "docs"

      - name: Print clean summary table
        shell: bash
        run: |
          python scripts/quick_summary.py \
            --state-dir "${STATE_DIR}" \
            --results "results" \
            --live "${LIVE_OUTDIR}"

      - name: Auto-commit state + docs
        shell: bash
        run: |
          python scripts/autocommit_state.py \
            --paths "${STATE_DIR}" docs \
            --message "engine: update state + docs"

