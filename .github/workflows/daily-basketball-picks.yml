name: Daily Basketball Picks

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install pandas requests

      - name: Fetch NBA and EuroLeague Data
        run: |
          python - <<'PY'
          import requests, pandas as pd
          from datetime import datetime, timedelta

          ODDS_API_KEY = "${{ secrets.ODDS_API_KEY }}"

          def fetch_odds(sport):
              url = f"https://api.the-odds-api.com/v4/sports/{sport}/odds"
              params = {
                  'apiKey': ODDS_API_KEY,
                  'regions': 'eu,us',
                  'markets': 'h2h',
                  'oddsFormat': 'decimal'
              }
              r = requests.get(url, params=params)
              r.raise_for_status()
              return r.json()

          sports = {
              'nba': 'basketball_nba',
              'euroleague': 'basketball_euroleague'
          }

          games = []
          for league, sport_key in sports.items():
              data = fetch_odds(sport_key)
              for g in data:
                  if len(g['bookmakers']) == 0: 
                      continue
                  odds_data = g['bookmakers'][0]['markets'][0]['outcomes']
                  if len(odds_data) != 2:
                      continue
                  games.append({
                      'league': league.upper(),
                      'home': odds_data[0]['name'],
                      'away': odds_data[1]['name'],
                      'home_odds': odds_data[0]['price'],
                      'away_odds': odds_data[1]['price'],
                      'commence_time': g['commence_time']
                  })

          df = pd.DataFrame(games)

          # Apply logic: underdogs and safe favorites
          def shortlist(df, min_odds, max_odds):
              return df[((df['home_odds'] >= min_odds) & (df['home_odds'] <= max_odds)) |
                        ((df['away_odds'] >= min_odds) & (df['away_odds'] <= max_odds))]

          underdogs = shortlist(df, 2.20, 4.50)
          favorites = shortlist(df, 1.30, 1.80)

          with open("basketball_picks.md", "w") as f:
              f.write("## NBA Smart Underdogs (Top 2)\n")
              f.write(underdogs[underdogs['league'] == 'NBA'].head(2).to_string(index=False) or "None")
              f.write("\n\n## NBA Safe High-Value Favorite (Top 1)\n")
              f.write(favorites[favorites['league'] == 'NBA'].head(1).to_string(index=False) or "None")
              f.write("\n\n## EuroLeague Smart Underdogs (Top 2)\n")
              f.write(underdogs[underdogs['league'] == 'EUROLEAGUE'].head(2).to_string(index=False) or "None")
              f.write("\n\n## EuroLeague Safe High-Value Favorite (Top 1)\n")
              f.write(favorites[favorites['league'] == 'EUROLEAGUE'].head(1).to_string(index=False) or "None")
          PY

      - name: Upload Picks Summary
        uses: actions/upload-artifact@v4
        with:
          name: basketball-picks
          path: basketball_picks.md
