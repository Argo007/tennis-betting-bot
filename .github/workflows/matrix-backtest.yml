name: Matrix Backtest (Kelly + TE)

on:
  workflow_dispatch:
    inputs:
      dataset:
        description: "CSV to backtest (leave blank to auto-detect)"
        required: false
        default: ""
      bands:
        description: "Odds bands (pipe-separated groups)"
        required: true
        default: "2.0,2.6|2.6,3.2|3.2,4.0"
      staking:
        description: "Staking method (kelly|flat)"
        required: true
        default: "kelly"
      kelly_scale:
        description: "Kelly scale (e.g., 0.5 for half-Kelly)"
        required: true
        default: "0.5"
      bankroll:
        description: "Starting bankroll (units)"
        required: true
        default: "1000"
      min_edge:
        description: "Minimum edge required (e.g., 0.02 = 2%)"
        required: true
        default: "0.02"
      vig_method:
        description: "Vig removal method (shin|wpe|none)"
        required: true
        default: "shin"

env:
  PYTHONUNBUFFERED: "1"

jobs:
  backtest:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          mkdir -p outputs docs/backtests results/backtests

      # ---------------------------
      # DATASET RESOLUTION
      # ---------------------------
      - name: Resolve dataset path
        id: dataset
        run: |
          set -e
          # 1) explicit input
          if [ -n "${{ inputs.dataset }}" ] && [ -f "${{ inputs.dataset }}" ]; then
            echo "file=${{ inputs.dataset }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          # 2) common locations (new first, then legacy)
          if [ -f "outputs/prob_enriched.csv" ]; then
            echo "file=outputs/prob_enriched.csv" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if [ -f "data/raw/vigfree_matches.csv" ]; then
            echo "file=data/raw/vigfree_matches.csv" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "ERROR: No usable dataset found (tried inputs.dataset, outputs/prob_enriched.csv, data/raw/vigfree_matches.csv)" >&2
          exit 1

      # ---------------------------
      # EDGESMITH ENRICHMENT
      # ---------------------------
      - name: Enrich edges (EdgeSmith)
        run: |
          set -e
          python scripts/edge_smith_enrich.py \
            --input  "${{ steps.dataset.outputs.file }}" \
            --output outputs/edge_enriched.csv \
            --min-edge "${{ inputs.min_edge }}" \
            --vig-method "${{ inputs.vig_method }}"
          echo "✅ Enriched -> outputs/edge_enriched.csv"

      # ---------------------------
      # MATRIX BACKTEST
      # ---------------------------
      # NOTE: if your repo uses a different backtest driver, just replace the script name below.
      - name: Run matrix backtest
        run: |
          set -e
          python scripts/matrix_backtest.py \
            --input outputs/edge_enriched.csv \
            --bands "${{ inputs.bands }}" \
            --staking "${{ inputs.staking }}" \
            --kelly-scale "${{ inputs.kelly_scale }}" \
            --bankroll "${{ inputs.bankroll }}" \
            --logs-dir results/backtests/logs \
            --summary-csv results/backtests/summary.csv
          echo "✅ Backtest summary -> results/backtests/summary.csv"

      # ---------------------------
      # REPORT
      # ---------------------------
      - name: Summarize
        run: |
          set -e
          python scripts/generate_report.py \
            --mode backtest \
            --input outputs/edge_enriched.csv \
            --summary results/backtests/summary.csv \
            --logs-dir results/backtests/logs \
            --out docs/backtests/index.html
          echo "✅ Report -> docs/backtests/index.html"

      # ---------------------------
      # ARTIFACTS
      # ---------------------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: matrix-backtest-${{ github.run_id }}
          path: |
            outputs/edge_enriched.csv
            results/backtests/**
            docs/backtests/index.html
