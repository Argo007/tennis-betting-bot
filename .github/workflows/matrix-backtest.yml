name: Matrix Backtest (Kelly + TE)

on:
  workflow_dispatch:
    inputs:
      dataset:
        description: "Path to CSV with odds + model p (optional). If empty we try results/tennis_data.csv, then outputs/prob_enriched.csv, then data/raw/odds/sample_odds.csv."
        required: false
        default: ""
      bands:
        description: "Edge bands e.g. 1.2,2.0|2.0,3.2|3.2,4.0"
        required: true
        default: "1.2,2.0|2.0,3.2|3.2,4.0"
      staking:
        description: "Staking method"
        required: true
        default: "kelly"
      kelly_scale:
        description: "Kelly scaler (0.5 = half Kelly)"
        required: true
        default: "0.5"
      bankroll:
        description: "Starting bankroll (units)"
        required: true
        default: "1000"
      min_edge:
        description: "Minimum true edge to consider (0.00 = none)"
        required: true
        default: "0.00"

jobs:
  backtest:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas jinja2

      - name: Resolve dataset path
        id: resolve
        run: |
          set -euo pipefail
          CAND="${{ inputs.dataset }}"
          if [[ -z "${CAND}" ]]; then
            for p in results/tennis_data.csv outputs/prob_enriched.csv data/raw/odds/sample_odds.csv; do
              if [[ -f "$p" ]]; then CAND="$p"; break; fi
            done
          fi
          if [[ -z "${CAND}" ]]; then
            echo "[resolve] ERROR: no usable dataset file." >&2
            exit 2
          fi
          echo "[resolve] Using: $CAND"
          echo "path=$CAND" >> "$GITHUB_OUTPUT"

      - name: Prepare -> outputs/prob_enriched.csv (use model p if present)
        run: |
          set -euo pipefail
          python scripts/prepare_backtest_input.py \
            --input  "${{ steps.resolve.outputs.path }}" \
            --output outputs/prob_enriched.csv

      - name: Enrich edges (EdgeSmith)
        run: |
          set -euo pipefail
          python scripts/edge_smith_enrich.py \
            --input outputs/prob_enriched.csv \
            --output outputs/edge_enriched.csv \
            --min-edge "${{ inputs.min_edge }}"

      - name: Run matrix backtest
        run: |
          set -euo pipefail
          python scripts/run_matrix_backtest.py \
            --dataset outputs/edge_enriched.csv \
            --staking "${{ inputs.staking }}" \
            --kelly-scale "${{ inputs.kelly_scale }}" \
            --bankroll "${{ inputs.bankroll }}" \
            --bands "${{ inputs.bands }}"

      - name: Generate HTML report
        run: |
          set -euo pipefail
          python scripts/generate_report.py \
            --input outputs/prob_enriched.csv \
            --backtests results/backtests \
            --output results/backtests/index.html

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: matrix-backtest-${{ github.run_id }}
          path: |
            results/backtests/index.html
            results/backtests/summary.csv
            results/backtests/params_cfg1.json
            results/backtests/logs/picks_cfg1.csv
            outputs/prob_enriched.csv
            outputs/edge_enriched.csv
