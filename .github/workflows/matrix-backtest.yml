name: Matrix Backtest (Kelly + TE)

on:
  workflow_dispatch:
    inputs:
      dataset:
        description: "CSV with odds+probs (defaults to outputs/prob_enriched.csv; falls back if missing)"
        default: "outputs/prob_enriched.csv"
        required: true
      bands:
        description: "Bands like 2.0,2.6|2.6,3.2|3.2,4.0"
        default: "2.0,2.6|2.6,3.2|3.2,4.0"
        required: true
      staking:
        description: "kelly or flat"
        default: "kelly"
        required: true
      kelly_scale:
        description: "Kelly scaler (0.5 = half-kelly)"
        default: "0.5"
        required: true
      bankroll:
        description: "Starting bankroll (units)"
        default: "1000"
        required: true

jobs:
  backtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install -U pip wheel
          pip install -r requirements.txt

      # Resolve a dataset that actually exists on this runner.
      # Priority:
      #   1) user-provided path
      #   2) outputs/prob_enriched.csv
      #   3) data/raw/vigfree_matches.csv  (has odds_a/odds_b + prob_a_vigfree/prob_b_vigfree)
      #   4) data/raw/odds/sample_odds.csv (last resort demo)
      - name: Resolve dataset path
        id: ds
        shell: bash
        run: |
          set -euo pipefail
          want="${{ github.event.inputs.dataset }}"
          candidates=(
            "$want"
            "outputs/prob_enriched.csv"
            "data/raw/vigfree_matches.csv"
            "data/raw/odds/sample_odds.csv"
          )

          for p in "${candidates[@]}"; do
            if [[ -f "$p" ]]; then
              echo "dataset=$p" >> "$GITHUB_OUTPUT"
              echo "[resolve] Using dataset: $p"
              exit 0
            fi
          done

          echo "::error::No dataset found. Checked: ${candidates[*]}"
          exit 1

      # Enrich to canonical columns + edges so the backtest always has what it needs.
      - name: Enrich edges (EdgeSmith)
        run: |
          python scripts/edge_smith_enrich.py \
            --input  "${{ steps.ds.outputs.dataset }}" \
            --output "outputs/prob_enriched.csv"

      - name: Run matrix backtest
        env:
          BANDS:   ${{ github.event.inputs.bands }}
          STAKE:   ${{ github.event.inputs.staking }}
          KSCALE:  ${{ github.event.inputs.kelly_scale }}
          BANK:    ${{ github.event.inputs.bankroll }}
        run: |
          python scripts/matrix_backtest.py \
            --input   "outputs/prob_enriched.csv" \
            --bands   "${BANDS}" \
            --staking "${STAKE}" \
            --kelly-scale "${KSCALE}" \
            --bankroll "${BANK}" \
            --outdir  "backtests"

      - name: Summarize
        run: |
          echo "Matrix Backtest â€” Summary"
          echo "Dataset used: outputs/prob_enriched.csv"
          echo "Bands:   ${{ github.event.inputs.bands }}"
          echo "Staking: ${{ github.event.inputs.staking }} | Kelly scale: ${{ github.event.inputs.kelly_scale }}"
          echo "Bankroll: ${{ github.event.inputs.bankroll }} units"
          echo ""
          ls -lah backtests || true
          test -f backtests/index.html && echo "::notice title=Report::backtests/index.html generated"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: matrix-backtest-${{ github.run_id }}
          path: |
            backtests/**
            outputs/prob_enriched.csv
          if-no-files-found: warn


