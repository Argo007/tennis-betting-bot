
name: Matrix Backtest (Kelly + TE)

on:
  workflow_dispatch:
    inputs:
      dataset_path:
        description: "CSV to backtest (defaults to outputs/prob_enriched.csv)"
        required: false
        default: "outputs/prob_enriched.csv"
      bands:
        description: "Odds bands like 1.2,2.0|2.0,2.6|2.6,3.2|3.2,4.0"
        required: false
        default: "1.2,2.0|2.0,2.6|2.6,3.2|3.2,4.0"
      staking:
        description: "kelly or flat"
        required: false
        default: "kelly"
      kelly_scale:
        description: "Kelly scaler (0.5 = half-Kelly)"
        required: false
        default: "0.5"
      min_edge:
        description: "Minimum edge threshold (e.g., 0.01 = 1%)"
        required: false
        default: "0.01"
      bankroll_units:
        description: "Starting bankroll (units)"
        required: false
        default: "1000"

jobs:
  backtest:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # ðŸ”‘ Build/refresh inputs so the backtest is hermetic in CI
      - name: Prepare backtest input
        run: |
          python scripts/prepare_backtest_input.py

      - name: Peek dataset (first 5 rows)
        run: |
          echo "::group::head outputs/prob_enriched.csv"
          head -n 5 outputs/prob_enriched.csv || true
          echo "::endgroup::"

      - name: Run matrix backtest
        env:
          DATASET_PATH: ${{ github.event.inputs.dataset_path || 'outputs/prob_enriched.csv' }}
          BANDS:        ${{ github.event.inputs.bands || '1.2,2.0|2.0,2.6|2.6,3.2|3.2,4.0' }}
          STAKING:      ${{ github.event.inputs.staking || 'kelly' }}
          KELLY_SCALE:  ${{ github.event.inputs.kelly_scale || '0.5' }}
          MIN_EDGE:     ${{ github.event.inputs.min_edge || '0.01' }}
          BANKROLL:     ${{ github.event.inputs.bankroll_units || '1000' }}
        run: |
          python scripts/run_matrix_backtest.py \
            --input "${DATASET_PATH}" \
            --bands "${BANDS}" \
            --staking "${STAKING}" \
            --kelly-scale "${KELLY_SCALE}" \
            --min-edge "${MIN_EDGE}" \
            --bankroll "${BANKROLL}" \
            --outdir results/backtests

      - name: Generate backtest report
        run: |
          python scripts/generate_report.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: matrix-backtest-${{ github.run_id }}
          if-no-files-found: warn
          path: |
            outputs/prob_enriched.csv
            outputs/edge_enriched.csv
            results/backtests/**
            docs/backtests/index.html
