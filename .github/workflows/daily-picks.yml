name: Tennis Picks

on:
  workflow_dispatch:

jobs:
  tennis_picks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests pandas

      - name: Get Tennis Picks
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          import requests, pandas as pd

          FAV_MIN, FAV_MAX = 1.15, 2.10
          DOG_MIN, DOG_MAX = 2.00, 6.00
          REGIONS = "eu,us"

          def fetch_odds(sport):
              url = f"https://api.the-odds-api.com/v4/sports/{sport}/odds/"
              params = {
                  "regions": REGIONS,
                  "markets": "h2h",
                  "oddsFormat": "decimal",
                  "apiKey": "${{ secrets.ODDS_API_KEY }}",
                  "dateFormat": "iso"
              }
              r = requests.get(url, params=params)
              r.raise_for_status()
              return r.json()

          def process_data(data):
              rows = []
              for match in data:
                  teams = match["bookmakers"][0]["markets"][0]["outcomes"]
                  for t in teams:
                      rows.append({
                          "match": match["home_team"] + " vs " + match["away_team"],
                          "team": t["name"],
                          "price": t["price"]
                      })
              return pd.DataFrame(rows)

          all_data = []
          for sport in ["tennis_atp", "tennis_wta"]:
              all_data.append(process_data(fetch_odds(sport)))
          df = pd.concat(all_data)

          favs = df[(df["price"] >= FAV_MIN) & (df["price"] <= FAV_MAX)]
          dogs = df[(df["price"] >= DOG_MIN) & (df["price"] <= DOG_MAX)]

          print("\n=== 🎯 Top Favorites ===")
          print(favs.sort_values("price").head(5).to_string(index=False))

          print("\n=== 🐺 Live Underdogs ===")
          print(dogs.sort_values("price", ascending=False).head(5).to_string(index=False))
