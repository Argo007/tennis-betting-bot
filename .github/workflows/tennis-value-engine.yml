name: Tennis Value Engine (Daily Picks)

on:
  workflow_dispatch:
    inputs:
      input_csv:
        description: "Input odds CSV"
        required: false
        default: "data/raw/odds/sample_odds.csv"
      gamma:
        description: "Probability stretch gamma (vig-free)"
        required: false
        default: "1.06"
      min_edge:
        description: "Min edge (raw)"
        required: false
        default: "0.00"
      min_edge_te:
        description: "Min edge for TE (used by matrix backtest)"
        required: false
        default: "0.02"
      stake_mode:
        description: "Stake mode"
        type: choice
        options: [kelly, flat]
        required: false
        default: "kelly"
      kelly_scale:
        description: "Kelly scaling (0–1)"
        required: false
        default: "0.5"
      kelly_cap:
        description: "Per-bet Kelly cap (0–1)"
        required: false
        default: "0.20"
      bankroll:
        description: "Bankroll for sizing/backtest"
        required: false
        default: "1000"
      bands:
        description: "Odds bands for matrix backtest (pipe-separated)"
        required: false
        default: "2.0,2.6|2.6,3.2|3.2,4.0"

jobs:
  value-engine:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      # Optional quick look at prob health (doesn't fail the job)
      - name: Run probability diagnostics
        run: |
          python scripts/check_probabilities.py \
            --input outputs/prob_enriched.csv \
            --min-edge "${{ github.event.inputs.min_edge_te || '0.02' }}" || true
        continue-on-error: true

      - name: Run daily pipeline (prob -> engine -> matrix backtest)
        run: |
          python scripts/run_daily_pipeline.py \
            --input "${{ github.event.inputs.input_csv || 'data/raw/odds/sample_odds.csv' }}" \
            --gamma "${{ github.event.inputs.gamma || '1.06' }}" \
            --min-edge "${{ github.event.inputs.min_edge || '0.00' }}" \
            --min-edge-te "${{ github.event.inputs.min_edge_te || '0.02' }}" \
            --stake-mode "${{ github.event.inputs.stake_mode || 'kelly' }}" \
            --kelly-scale "${{ github.event.inputs.kelly_scale || '0.5' }}" \
            --kelly-cap "${{ github.event.inputs.kelly_cap || '0.20' }}" \
            --bankroll "${{ github.event.inputs.bankroll || '1000' }}" \
            --bands "${{ github.event.inputs.bands || '2.0,2.6|2.6,3.2|3.2,4.0' }}"

      - name: Publish summaries
        run: |
          for f in outputs/engine_summary.md outputs/pipeline_summary.md; do
            if [ -s "$f" ]; then
              echo "" >> "$GITHUB_STEP_SUMMARY"
              cat "$f" >> "$GITHUB_STEP_SUMMARY"
            fi
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: value-engine-output
          path: |
            outputs/**
            value_picks_pro.csv
          if-no-files-found: warn
