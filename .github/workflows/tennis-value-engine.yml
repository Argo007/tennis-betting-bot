name: Tennis Value Engine (Daily Picks)

on:
  schedule:
    - cron: "0 7 * * *"        # daily 07:00 UTC
  workflow_dispatch:
    inputs:
      region:
        description: "Feed region for picks_pro (e.g., EU/US)"
        required: false
        default: "EU"
      lookahead_h:
        description: "Odds freshness window (hours) -> picks_pro --lookahead-h"
        required: false
        default: "6"
      kelly:
        description: "Kelly fraction sent to picks_pro (picks_pro may ignore if not used)"
        required: false
        default: "1.0"
      # Engine controls
      min_edge:
        description: "Engine: minimum edge (e.g., 0.03 = 3%)"
        required: false
        default: "0.03"
      kelly_cap:
        description: "Engine: Kelly cap (fraction of full Kelly)"
        required: false
        default: "0.20"
      max_risk:
        description: "Engine: max fraction of bankroll per bet"
        required: false
        default: "0.05"
      bankroll:
        description: "Engine: bankroll (€)"
        required: false
        default: "1000"
      max_picks:
        description: "Engine: top N picks to output"
        required: false
        default: "20"
      publish_md:
        description: "Publish markdown summary to job log?"
        required: true
        type: choice
        default: "yes"
        options: ["yes","no"]

permissions:
  contents: read

env:
  TZ: Europe/Amsterdam
  REGION:      ${{ github.event.inputs.region      || 'EU' }}
  LOOKAHEAD_H: ${{ github.event.inputs.lookahead_h || '6'  }}
  KELLY:       ${{ github.event.inputs.kelly       || '1.0' }}
  MIN_EDGE:    ${{ github.event.inputs.min_edge    || '0.03' }}
  KELLY_CAP:   ${{ github.event.inputs.kelly_cap   || '0.20' }}
  MAX_RISK:    ${{ github.event.inputs.max_risk    || '0.05' }}
  BANKROLL:    ${{ github.event.inputs.bankroll    || '1000' }}
  MAX_PICKS:   ${{ github.event.inputs.max_picks   || '20'  }}
  PUBLISH_MD:  ${{ github.event.inputs.publish_md  || 'yes' }}

jobs:
  value-engine:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy requests pyyaml tabulate openpyxl matplotlib unidecode rapidfuzz

      - name: Verify scripts present
        run: |
          test -f tennis_value_picks_pro.py || { echo "::error ::tennis_value_picks_pro.py missing"; exit 1; }
          test -f tennis_value_engine.py    || { echo "::error ::tennis_value_engine.py missing"; exit 1; }
          mkdir -p outputs

      # 1) Build candidate list
      - name: Run picks_pro (build candidates)
        shell: bash
        run: |
          set -euo pipefail
          echo "Running picks_pro…" | tee outputs/engine_run.log
          python tennis_value_picks_pro.py \
            --region "${REGION}" \
            --lookahead-h "${LOOKAHEAD_H}" \
            --kelly "${KELLY}" \
            --out value_picks_pro.csv 2>&1 | tee -a outputs/engine_run.log
          # Keep pipeline alive even if zero rows
          test -f value_picks_pro.csv || echo "date,player,opponent,odds,model_conf,book_count" > value_picks_pro.csv

      # 2) Decide + size bets
      - name: Run decision engine
        shell: bash
        run: |
          set -euo pipefail
          echo "Running engine…" | tee -a outputs/engine_run.log
          python tennis_value_engine.py \
            --input value_picks_pro.csv \
            --elo-atp data/atp_elo.csv \
            --elo-wta data/wta_elo.csv \
            --min-edge "${MIN_EDGE}" \
            --kelly-cap "${KELLY_CAP}" \
            --max-risk "${MAX_RISK}" \
            --bankroll "${BANKROLL}" \
            --max-picks "${MAX_PICKS}" 2>&1 | tee -a outputs/engine_run.log

      - name: Publish summary
        if: ${{ env.PUBLISH_MD == 'yes' }}
        run: |
          echo "## Tennis Value — Daily Picks" >> "$GITHUB_STEP_SUMMARY"
          if [ -f outputs/engine_summary.md ]; then
            cat outputs/engine_summary.md >> "$GITHUB_STEP_SUMMARY"
          else
            echo "_No summary produced._" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: value-engine-output
          path: |
            value_picks_pro.csv
            outputs/picks_final.csv
            outputs/*.md
            outputs/*.log
          if-no-files-found: warn
